name: CI/CD Process
on:
  workflow_call:
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.event.number || github.ref }}
  cancel-in-progress: true

jobs:
  build:
    strategy:
      matrix:
        os: [ windows, macos, ubuntu ]
    runs-on: ${{ matrix.os }}-latest
    concurrency:
      group: build-${{ github.workflow }}-${{ matrix.os }}-${{ github.event.number || github.ref }}
      cancel-in-progress: true
    steps:
      - name: Checkout
        uses: actions/checkout@v4.1.1
      - name: Check the simulations on CI
        uses: DanySK/build-check-deploy-gradle-action@2.2.19
        with:
          check-command: ./gradlew runAll
          should-run-codecov: false
          should-validate-wrapper: ${{ runner.os == 'Linux' }}
  deploy:
    needs:
      - build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'
    steps:
      - name: Checkout
        uses: actions/checkout@v4.1.1
        with:
          fetch-depth: 0
          token: ${{ secrets.PERSONAL_TOKEN }}
      - name: Log in to Docker Hub
        uses: docker/login-action@v3.0.0
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Deploy
        uses: DanySK/build-check-deploy-gradle-action@2.2.19
        with:
          deploy-command: |
            ./gradlew dockerPushImage
            npm install
            npx semantic-release
          github-token: ${{ github.token }}
          should-run-codecov: false
          should-deploy: true
          build-command: true
          check-command: true
  success:
    runs-on: ubuntu-latest
    needs:
      - build
      - deploy
    if: >-
      always() && (
        contains(join(needs.*.result, ','), 'failure')
        || !contains(join(needs.*.result, ','), 'cancelled')
      )
    steps:
      - name: Verify that there were no failures
        run: ${{ !contains(join(needs.*.result, ','), 'failure') }}
